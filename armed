/*****************************************************
Project     : Arjuna 
Version     : 4
Date/Time   : 13 May 2014/

FITUR FIX
- Compas
- Ultrasonik
- Matiin api
- Garis vs Juring
- Detek Anjing
- Sound Act.

BUG
- Balik ke ruang 1 yang di samping
- baik lagi ke ruang api kalo masih nyala apinya

*****************************************************/

#include <mega128.h>
#include <delay.h>

#include <alcd.h>
// Standard Input/Output functions
#include <stdio.h>

// I2C Bus functions
#asm
   .equ __i2c_port=0x12 ;PORTD
   .equ __sda_bit=1
   .equ __scl_bit=0
#endasm
#include <i2c.h>

//Definisi PORT
#define kipas PORTD.7
#define uvtron PIND.6
#define sound PINA.7
#define port_biper PORTG
//#define biper PORTG

/*----------inisiasi void-------------*/
void detek_garis();
void cek_boneka();
void start();
void ruang();
void ruang_belakang();
//void resetruang();
void matiin_api();
void get_adc();
void cek_ultrasonik();
void sensorboneka();
void tes_uvtron();
void tes_boneka();

/*--------------- inisialisasi variabel ------ */
bit ruang1=0,ruang2=0,ruang3=0,ruang4=0,aktifcekanjing=0;
//===================BIPER================================
void biper(int a)
{
    PORTG = 0x01;
    delay_ms(a);
    PORTG = 0x00;
    
}
/*===================SENSOR KOMPAS========================*/
unsigned char 
derajat_compass,calibrate_cmps    ;  
eeprom unsigned char w                   = 222 // inisialisasi awal nilai w sebelum di kalibrasi 
;
bit switch_PID=1;
int set;

unsigned char read_compass(unsigned char arah)
{
    i2c_start();
    i2c_write(0xC0);
    i2c_write(arah);
    i2c_start();
    i2c_write(0xC1);
    arah=i2c_read(0);
    i2c_stop();
    delay_us(10);
    return arah;
}            

void get_compass()
{
    derajat_compass = read_compass(1);
    delay_ms(20);
    calibrate_cmps = derajat_compass + w; //digunakan u/ set nilai calibrasi
}

void setpoint_compass()
{
    get_compass();
    w = 256 - derajat_compass;
}

//==================ULTRASONIK=============================
//------------------Variabel-------------------------------
unsigned int counter1,counter2,counter3,counter4,counter5,counter6,counter7;
unsigned int sensdepan,senskanan,senskiri,senssampingkanan,senssampingkiri,sensbelakang,sensboneka,;
unsigned char kata[16];
unsigned int count1=0,countnyangkut;

//---------kalibrasi---------------------------------------
eeprom float // ==> update 6 april 2014 
mdepan          = 0.010570825   ,bdepan         = -0.591966173,  
mkanan          = 0.011043622   ,bkanan         = -1.982330204,
mkiri           = 0.010723861   ,bkiri          = -1.721179625,   
msampingkanan   = 0.027816412   ,bsampingkanan  = -0.931849791,
msampingkiri    = 0.027173913   ,bsampingkiri   = 0.081521739,
mbelakang       = 0.028818444   ,bbelakang      = -1.181556196,
mboneka         = 0.028818444   ,bboneka        = -1.181556196;

//------------------Variabel-------------------------------
//unsigned int tempsensdepan,tempsenskanan,tempsenskiri,tempsenssampingkanan,tempsenssampingkiri,tempbelakang;

//------------------Void-------------------------------
void depan() 
{     
      count1=0;counter1=0;sensdepan=0;  
      DDRE.2=1;PORTE.2=1;           
      delay_us(10);                   
      PORTE.2=0;DDRB.2=0;PORTB.2=1;
      while(PINB.2==0 && count1<=3000) {count1++;}; //pin echo
      while(PINB.2==1)                 {counter1++;};
      sensdepan=((mdepan*counter1)+bdepan);
      delay_ms(4);         
}
void kanan() 
{     
      count1=0;counter2=0;senskanan=0;
      DDRE.3=1;PORTE.3=1;           
      delay_us(10);                                                                    
      PORTE.3=0;DDRB.3=0;PORTB.3=1;
      while(PINB.3==0 && count1<=3000) {count1++;}; //pin echo 
      while(PINB.3==1)                 {counter2++;};
      senskanan=((mkanan*counter2)+bkanan);
      delay_ms(4);
}
void kiri()
{
      count1=0;counter3=0;senskiri=0;  
      DDRE.7=1;PORTE.7=1;            
      delay_us(10);                   
      PORTE.7=0;DDRB.7=0;PORTB.7=1;
      while(PINB.7==0 && count1<=3000) {count1++;}; //pin echo
      while(PINB.7==1)                 {counter3++;};
      senskiri=((mkiri*counter3)+bkiri);
      delay_ms(4);
} 
void sampingkanan(){
      count1=0;counter4=0;senssampingkanan=0;  
      DDRE.5=1;PORTE.5=1;            
      delay_us(10);                   
      PORTE.5=0;DDRB.5=0;PORTB.5=1;
      while(PINB.5==0 && count1<=3000) {count1++;}; //pin echo
      while(PINB.5==1)                 {counter4++;};
      senssampingkanan=((msampingkanan*counter4)+bsampingkanan);
      delay_ms(4);
} 
void sampingkiri()
{
      count1=0;counter5=0;senssampingkiri=0;  
      DDRE.4=1;PORTE.4=1;            
      delay_us(10);                   
      PORTE.4=0;DDRB.4=0;PORTB.4=1;
      while(PINB.4==0 && count1<=3000) {count1++;}; //pin echo
      while(PINB.4==1)                 {counter5++;};
      senssampingkiri=((msampingkiri*counter5)+bsampingkiri);
      delay_ms(4);
}
void belakang()
{
      count1=0;counter6=0;sensbelakang=0;  
      DDRA.2=1;PORTA.2=1;            
      delay_us(10);                   
      PORTA.2=0;DDRA.3=0;PORTA.3=1;
      while(PINA.3==0 && count1<=3000) {count1++;}; //pin echo
      while(PINA.3==1)                 {counter6++;};
      sensbelakang=((mbelakang*counter6)+bbelakang);
      delay_ms(4);
}
void boneka()
{
      // trig a0 echo a1
      count1=0;counter7=0;sensboneka=0;  
      DDRA.0=1;PORTA.0=1;            
      delay_us(10);                   
      PORTA.0=0;DDRA.1=0;PORTA.1=1;
      while(PINA.1==0 && count1<=3000) {count1++;}; //pin echo
      while(PINA.1==1)                 {counter7++;};
      sensboneka=((mboneka*counter7)+bboneka);
      delay_ms(4);
}

/*================================KOMUNIKASI==================================*/
void set_velocity(unsigned char kiri, unsigned char kanan)
{
    unsigned char buff;//result=0,hitung;
    unsigned char buff_kiri = (kiri & 0b00001111)<<4;      //8 bit    geser ke kiri 4
    unsigned char buff_kanan = kanan & 0b00001111;         // 8 bit ,diambil 4 bit terahir   kiri+ kanan dikirim ke portD  slave
    buff = (buff_kiri + buff_kanan);                     
    PORTC = buff;            
}

//--------------------------------NORMALISASI--------------------------------
void normalisasi_velocity(int v_kiri, int v_kanan)   //skala -5 s.d. 9
{
    if(v_kiri <= -6)v_kiri = -6;
    if(v_kiri >= 6) v_kiri = 6;   
    if(v_kanan <= -6)v_kanan = -6;
    if(v_kanan >= 6) v_kanan = 6;  
    v_kiri  += 6;    //v_kiri + a= 5   nilai a di konvers ke biner
    v_kanan += 6;   
    set_velocity((unsigned char)v_kiri,(unsigned char)v_kanan);
}

//================================KONTROL==================================
//---------------------------- Variabel PID--------------------------------
int 
MV          = 0;

signed char 
rpwm, lpwm;
float 
P           = 0,
D           = 0,
It          = 0,
rate        = 0,
var_Kp      = 50,//50
var_Kd      = 10,//10
var_Ki      = 0,
error       = 0,
last_error  = 0;
unsigned int 
var_Ts      = 0;
unsigned int 
counterbelokkanan = 0,
counterbelokkiri  = 0;

//--------------------------------GERAKAN--------------------------------
//norm (kiri,kanan)
void diam()
{
    normalisasi_velocity(-6,-6);
}
void putarkiri()
{
    normalisasi_velocity(-2, -6);
}
void putarkanan()
{
    normalisasi_velocity(-6, -5);
}
void belok_kanan()
{
    normalisasi_velocity(-4,-5);
}
void belok_kiri()
{
    normalisasi_velocity(-4,-3);
}
void mundur()
{
    normalisasi_velocity(-4,-6);
}
void jalanlurus()
{
    normalisasi_velocity(6,6);
}
void putarkanan_kecil()
{
    normalisasi_velocity(-2,-3);
}
void putarkiri_kecil()
{
    normalisasi_velocity(-1,-3);
}
void kanankepiting()
{
    normalisasi_velocity(-4,-1);
}
void kirikepiting()
{
    normalisasi_velocity(-5,-1);
}

//-----------------------------perataan-----------------------------
//---------------------------variabel-------------------
unsigned char pulang=0;
int 
selisih,
countsamping;
eeprom unsigned int 
cal_adc_tengah_kanan    = 325, // 11 APRIL 2014
cal_adc_tengah_kiri     = 384, // 11 APRIL 2014
cal_adc_depan_kanan     = 467, // 11 APRIL 2014
cal_adc_depan_kiri      = 466, // 11 APRIL 2014
cal_adc_belakang        = 472; // 11 APRIL 2014
unsigned int adc_depan_kanan,adc_depan_kiri,adc_tengah_kanan,adc_tengah_kiri,adc_belakang;

void rataproxy()
{
    if (pulang==1)
    {
        get_adc();
        if(adc_depan_kanan<=cal_adc_depan_kanan && adc_depan_kiri>=cal_adc_depan_kiri)
        {
            do
            {
            get_adc();
            putarkanan_kecil();
            }while(adc_depan_kiri>=cal_adc_depan_kiri);
        }
        else if(adc_depan_kanan>=cal_adc_depan_kanan && adc_depan_kiri<=cal_adc_depan_kiri)
        {
            do
            {
            get_adc();
            putarkiri_kecil();
            }while(adc_depan_kanan>=cal_adc_depan_kanan);
        }
    }
    else 
    {
        get_adc();
        if(adc_tengah_kanan<=cal_adc_tengah_kanan && adc_tengah_kiri>=cal_adc_tengah_kiri)
        {
            do
            {
            get_adc();
            putarkanan_kecil();
            }while(adc_tengah_kiri>=cal_adc_tengah_kiri);
        }
        else if(adc_tengah_kanan>=cal_adc_tengah_kanan && adc_tengah_kiri<=cal_adc_tengah_kiri)
        {
            do
            {
            get_adc();
            putarkiri_kecil();
            }while(adc_tengah_kanan>=cal_adc_tengah_kanan);
        }
    }
}
void ratakiri()
{
    if(senssampingkiri>senskiri)
    {
        do
        {
            putarkanan_kecil();        
            kiri();
            sampingkiri();
            if(senskiri<senssampingkiri)
            {
                selisih=senssampingkiri-senskiri;
            }
            else selisih=0;
        }
        while(selisih>1);  
        
    }
    else if(senskiri>senssampingkiri)
    {
        do
        {
            putarkiri_kecil();
            kiri();
            sampingkiri();
            if(senskiri>senssampingkiri)
            {
                selisih=senskiri-senssampingkiri;
            }
            else selisih=0;
        }
        while(selisih>1);       
    }

}

void ratakanan()
{
    if(senssampingkanan>senskanan)
    {
        do
        {
            putarkiri_kecil();
            kanan();
            sampingkanan();
            if(senskanan<senssampingkanan)
            {
                selisih=senssampingkanan-senskanan;
            }
            else selisih=0;
        }
        while(selisih>1);
    }
    else if(senskanan>senssampingkanan)
    {
        do
        {
            putarkanan_kecil();
            kanan();
            sampingkanan();
            if(senskanan>senssampingkanan)
            {
                selisih=senskanan-senssampingkanan;
            }
            else selisih=0;
        }
        while(selisih>1);   
    }
}
void ratapintu()
{
    kiri();
    sampingkiri();
    kanan();
    sampingkanan();  
    if ((senskanan >=25 || senssampingkanan >=25) && (senskiri >= 25 || senssampingkiri >=25))
    {
        rataproxy();
    }
    else
    {
    if(senskiri<=25)
    {                               
        ratakiri();
        countsamping=0;
        do{
            sampingkiri();
            kirikepiting();
            countsamping++;
            if(countsamping>=150) goto exit;   
        }while(senssampingkiri>=15 && countsamping <= 170);
    } 
    else{
        if(senskiri<=senskanan)
        {                      
            ratakiri();
            countsamping=0;
            do{
                sampingkiri();
                kirikepiting();
                countsamping++;
                if(countsamping>=150) goto exit;   
            }while(senssampingkiri>=15 && countsamping <= 150);    
        }
        else if(senskiri>senskanan)
        {   
            ratakanan();   
            countsamping=0;
            do{
                sampingkanan();
                kanankepiting();
                countsamping++;
                if(countsamping>=150) goto exit;   
            }while(senssampingkanan>=15 && countsamping <= 150);  
        }    
    }
    }
    exit:
}

int countBelokan;
void PID_kanan()
{
        if(senskanan>=29)
        {   
            countBelokan = 0;
            detek_garis();
            do
            {
                depan();
                kanan();
                belok_kanan(); 
                detek_garis();
                countBelokan++;
                //cek_boneka();
                if(countBelokan>=150)
                {     
                    countnyangkut=0;
                    do
                    {
                        PORTG = 0x01;
                        jalanlurus();
                        depan();
                        countBelokan++;
                        countnyangkut++;
                            if(countnyangkut>=200){
                                mundur();
                                delay_ms(400);
                                putarkanan();
                                delay_ms(250);                            
                            }   
                    }while(sensdepan>=10 && countBelokan <= 300);
                    PORTG = 0x00;
                    goto exit;    
                }
            }
            while(sensdepan>14 && senskanan>=32 );
            exit:
            if(countBelokan >= 15){
                counterbelokkanan++;
                biper(100);
            } 
        }          
        error=(float)((float)((int)senskanan-14)/100);  //17= set point
        P=(var_Kp*error);
        It= ((error+last_error)*var_Ki);                                  
        rate=error-last_error;
        D=(rate*var_Kd);
        MV=((int)P+(int)D+(int)It);
        rpwm=6-MV;
        lpwm=6+MV;      
        last_error=error;
        if(rpwm>6)  rpwm=6;
        if(rpwm<0) rpwm=0;
        if(lpwm>6)  lpwm=6;
        if(lpwm<0) lpwm=0;
        normalisasi_velocity(lpwm,rpwm);
        delay_ms(var_Ts);
}
void PID_kiri()
{
    if(senskiri>=29)
    {   
        sampingkiri();
        countBelokan = 0;
        if (senssampingkiri>=25)
        {
            do
            {
                //cek_boneka();
                depan();
                kiri();
                belok_kiri(); 
                detek_garis();
                countBelokan++;   
                if(countBelokan>=150)
                {   
                    countnyangkut=0;
                    do
                    {
                        jalanlurus();
                        depan();
                        countBelokan++;
                        countnyangkut++;
                        if(countnyangkut>=200){
                            mundur();
                            delay_ms(700);
                            putarkanan();
                            delay_ms(400);                            
                        }       
                    }
                    while(sensdepan>=10 || countBelokan <= 300);
                        goto exit;    
                    }
                }
                while (sensdepan>19 && senskiri>=32);
                exit:
                if(countBelokan >= 15){
                    counterbelokkiri++;
                    biper(100);
                }
            } 
        }          
    error=(float)((float)((int)senskiri-12)/100);  //17= set point
    P=(var_Kp*error);
    It= ((error+last_error)*var_Ki);                                  
    rate=error-last_error;
    D=(rate*var_Kd);
    MV=((int)P+(int)D+(int)It);
    rpwm=6+MV;
    lpwm=6-MV;      
    last_error=error;
    if(rpwm>6)  rpwm=6;
    if(rpwm<0) rpwm=0;
    if(lpwm>6)  lpwm=6;
    if(lpwm<0) lpwm=0;
    normalisasi_velocity(lpwm,rpwm);
    delay_ms(var_Ts);
}

//--------------keluar juring----------------

void keluar_juring()
{
    if (switch_PID==1)
    {
        depan();
        kanan();
        if(senskanan>=29)
        {
            do
            {
                depan();
                kanan();
                belok_kanan();               
            }
            while( sensdepan>25 && senskanan>=32);
        } 
        if(sensdepan <= 18)
        {   
            do
            {
                depan();
                putarkiri();
            }
            while(sensdepan<=19);
        }         
        error=(float)((float)((int)senskanan-14)/100);  //17= set point
        P=(var_Kp*error);
        It= ((error+last_error)*var_Ki);                                  
        rate=error-last_error;
        D=(rate*var_Kd);
        MV=((int)P+(int)D+(int)It);
        rpwm=6-MV;
        lpwm=6+MV;      
        last_error=error;
        if(rpwm>6)  rpwm=6;
        if(rpwm<0) rpwm=0;
        if(lpwm>6)  lpwm=6;
        if(lpwm<0) lpwm=0;
        normalisasi_velocity(lpwm,rpwm);
        delay_ms(var_Ts);
    }
    else if(switch_PID==0)
    {
        depan();
        kiri();
        if(senskiri>=29)
        {
            do
            {
                depan();
                kiri();
                belok_kiri();               
            }
            while( sensdepan>25 && senskiri>=32);
        } 
        if(sensdepan <= 18)
        {   
            do
            {
                depan();
                putarkanan();
            }
            while(sensdepan<=19);
        }         
        error=(float)((float)((int)senskiri-14)/100);  //17= set point
        P=(var_Kp*error);
        It= ((error+last_error)*var_Ki);                                  
        rate=error-last_error;
        D=(rate*var_Kd);
        MV=((int)P+(int)D+(int)It);
        rpwm=6+MV;
        lpwm=6-MV;      
        last_error=error;
        if(rpwm>6)  rpwm=6;
        if(rpwm<0) rpwm=0;
        if(lpwm>6)  lpwm=6;
        if(lpwm<0) lpwm=0;
        normalisasi_velocity(lpwm,rpwm);
        delay_ms(var_Ts);                
    }
}

//================================PERAPIAN============================
bit 
api_global  = 1,
api_ruang   = 0,
ruangapi    = 0;

int y;
void cek_api(int a)
{
    for(y=0;y<=a;y++){
        if(uvtron==0){
            api_ruang=1;    
        }else{
            api_ruang=0;
        }
    }
}

//=====================ADC=================================
//----------------------DEFINE PROXI---VAR---------------
#define kalibrasiabu PIND.3
#define kalibrasiputih PIND.2

unsigned int i;
unsigned int minn1[5], minn[5];

//----------------------DEFINE PROXI---VAR-----------------

#define ADC_VREF_TYPE 0x40
// Read the AD conversion result
unsigned int read_adc(unsigned char adc_input)
{
ADMUX=adc_input | (ADC_VREF_TYPE & 0xff);
// Delay needed for the stabilization of the ADC input voltage
delay_us(10);
// Start the AD conversion
ADCSRA|=0x40;
// Wait for the AD conversion to complete
while ((ADCSRA & 0x10)==0);
ADCSRA|=0x10;
return ADCW;
}

//---------------------Garis & Juring-------------------------
bit 
api,home;
unsigned char
aktifcekgaris       = 1,
startlorong, // jika 1 = start lorong, jika 0 maka start ruang
countergaris, kondisiapikhusus = 0, aktiflimitcountergaris = 1, darurat = 0;

void cek_juring()
{
    if(api_ruang==1 && api_global == 1 && api == 1){
        matiin_api();
    }
    if(kondisiapikhusus == 1){
        matiin_api();
        aktifcekgaris = 1;      
        ruangapi=1;
        api=0;
        aktiflimitcountergaris = 0;
        
    }
}
void cek_home(){
    if(api_ruang==0 && api_global == 0 && api == 0)
    {
        while(1)
        {
            diam();
            biper(200);
            delay_ms(200);
        }
    }    
} 
unsigned int kiribalik,belakangbalik;
unsigned char kiripulang,belakangpulang,ruanghome=0;
void cek_komp(){
    get_compass();
    printf(" cal: %d\r\n",calibrate_cmps);
    if(countergaris==1){
        setpoint_compass();
        kanan();
        depan();
        kiribalik = senskanan;
        belakangbalik = sensdepan;
    }                                                                                                       
    
}
void inv_cek_komp(){
    kiripulang = kiribalik>=senskiri-5 && kiribalik<=senskiri+5;
    belakangpulang = belakangbalik>=sensbelakang-15 && belakangbalik<=sensbelakang+15;
    get_compass();
    if((calibrate_cmps<=185 && calibrate_cmps>= 100)){    
        kiri();
        belakang();
        if ((kiripulang || belakangpulang)){                            
            kiri();
            belakang();
            printf("kiri : %d belakang : %d HOMEEEEEEEEE!!!!!!!!!!!!!!!!!!!!!! \r\n",senskiri,sensbelakang);
            ruanghome = 1;
        }
    }
}
void candleLocation(){
    /*
    cek uvtron 1
    cek uvtron 2 (yang pake selubung)
    if(uv1 && uv2)
    {
        kipas = 1;counter = 0;
        do{
            jalanlurus();
            //cekuvtron1
            //cekuvtron2
            if( !uv1 && !uv2){
                goto exit;
                api = 0;
            }
            if(uv1 && !uv2){
                counter2 = 0;
                do{
                    // cekuvtron2
                    putarkiri_kecil();
                    counter2++;
                }while(counter2 <= 20 && uv2);
                counter2 = 0;
                do{
                    // cekuvtron2
                    putarkanan_kecil();
                    counter2++;
                }while(counter2 <= 40 && uv2);
            }
            delay_ms(50);
        }while(counter <= 20)
    }
    */
    exit:
}
unsigned char homediruang=0,pengecualianruang1=0,ruang41=0,ruang23=0,anjingsamping,compasgaris,cekcompassgaris;
void cek_garis()
{
    countergaris++;
    diam();
    delay_ms(400);
    ratapintu();
    // CEK KONDISI COUNTER GARIS
    if(aktiflimitcountergaris == 1){
        if (countergaris >= 5 && api_global == 1){
            biper(2000);
            aktifcekgaris = 0;
            kondisiapikhusus = 1;
        }
    }
    cek_komp();
    if (countergaris == 1)
    {
        aktifcekanjing=1;
        belakang();
        if((sensbelakang <= 40)&&(counterbelokkanan>1 && counterbelokkanan <=3 && counterbelokkiri==0))
        {
            startlorong = 1; // start di lorong
            goto sini;
        }
        else
        {
            startlorong = 0; // start di ruang
            PORTG=0x01;
            delay_ms(150);
            PORTG=0x00;
            ruang();
            if(ruang4==1 && ruang1==1){
                ruang41=1;
            }
            if(ruang3==1 && ruang2==1){
                ruang23=1;
            }
            if((ruang1==1 && (ruang2==0 && ruang3==0 && ruang4==0))){
                homediruang=1;
            }
            if(ruang41 == 1){
                aktifcekanjing=1;
                do{     
                    PORTG = 0x01;
                    depan();
                    jalanlurus();
                    PORTG=0x00;
                }while(sensdepan>=10);
                diam();
                delay_ms(300);
                cek_boneka();
                goto exit; 
            } 
            jalanlurus();
            delay_ms(200);
            //resetruang();
            goto exit;  
        }   
    }
    if (countergaris == 2)
    {
        if(ruang41==1){
            if(counterbelokkanan<=1 && (counterbelokkiri <= 1)){
                homediruang=1;    
            }
            ruang_belakang();
            if(ruang3==1 || ruang1==1){
                homediruang=4;
            }
            if(ruang2==1){
                homediruang=1;
            }
        }
        //resetruang();
    }
    sini:
    /* =============================== API MASIH NYALA ==============================*/
    if(api_global==1){
        // misi mau matiin api
        if(ruangapi==1){
            if(api==1){
                //muter balik  
                PORTG=0x01;
                diam();
                delay_ms(1000);
                PORTG=0x00;
                kanan();
                kiri();           
                if(senskiri>=35)
                {
                    mundur();
                    delay_ms(1000);
                    putarkiri();
                    delay_ms(700);
                }
                else 
                {                
                    mundur();
                    delay_ms(1000);
                    putarkanan();
                    delay_ms(700);
                }
            goto exit;
            }
            else if(api==0){
                 //pulang
                 api_global=0;
                 ruangapi=0;
                 api=0;   
                 pulang=1;
                 jalanlurus();
                 delay_ms(300);
                 goto exit;
            }    
        }
        else if(ruangapi==0){
            diam();
            delay_ms(500);
            cek_api(3);
            if(api_ruang==1){
                ruangapi=1;
                api=1;
                jalanlurus();
                delay_ms(300);
                goto exit;
                //masuk ke ruangan api
            }
            else if(api_ruang==0){
                // CEK KALO NYASAR DI RUANGAN
                if(switch_PID == 1){
                    if(counterbelokkiri >= 4 && counterbelokkanan <= 1){
                        jalanlurus();
                        delay_ms(300); 
                        goto exit;
                    }
                    else{
                        goto muterbalik;
                    }
                } 
                else if(switch_PID == 0){
                    if(counterbelokkanan >= 4 && counterbelokkiri<=1 ){
                        jalanlurus();
                        delay_ms(300); 
                        goto exit;
                    }else{
                        goto muterbalik;
                    }
                }
                //muter balik    
                muterbalik:
                diam();
                delay_ms(200);
                belakang();
                if(sensbelakang <= 40)
                {
                    countBelokan=0;
                    do{
                        belakang();
                        mundur();
                        countBelokan++;
                    }while(sensbelakang>=12 && countBelokan <= 130);
                }
                else{
                    mundur();
                    delay_ms(900);
                }
                diam(); 
                sampingkiri();
                delay_ms(100);
                if(senssampingkiri>=25)
                {
                    putarkiri(); 
                    delay_ms(1070);
                    countBelokan=0;
                    do
                    {
                        kanan();
                        jalanlurus();
                        countBelokan++;
                    }while(senskanan>=16 && countBelokan <= 60); 
                    goto exit;
                }
                else
                {
                countBelokan=0;
                    do
                    {     
                        countBelokan++;
                        kanan();
                        sampingkanan();
                        putarkanan();
                    } 
                    while((senskanan >= 20 || senssampingkanan>=16) && countBelokan<=250);
                }  
                goto exit;        
            }
        }
    }
    else if(api_global==0){

    }            
    exit:
    counterbelokkiri=0;
    counterbelokkanan=0;
}
void get_adc()
{
     adc_depan_kanan=read_adc(0);
     delay_us(10);
     adc_tengah_kanan=read_adc(1);
     delay_us(10);
     adc_depan_kiri=read_adc(2);
     delay_us(10);
     adc_tengah_kiri=read_adc(3);
     delay_us(10);
     adc_belakang=read_adc(4);
     delay_us(10);
}

bit bandeka,bandeki,banteka,banteki,banbel;
// ==> BUAT 5 PROXY
void detek_garis(){
    get_adc();
    bandeka = adc_depan_kanan <= cal_adc_depan_kanan;
    bandeki = adc_depan_kiri <= cal_adc_depan_kiri;
    banteka = adc_tengah_kanan <= cal_adc_tengah_kanan;
    banteki = adc_tengah_kiri <= cal_adc_tengah_kiri;
    banbel = adc_belakang <= cal_adc_belakang;
    if(api_global == 0 && startlorong != 1 && ruanghome != 1){
        if ((bandeka || bandeki) && (!banteka && !banteki && !banbel)){
            if(bandeka && !bandeki)
            {
                putarkanan_kecil();
                delay_ms(437);
                // yang kena berarti yang depan kanan
            }else if (!bandeka && bandeki){
                putarkiri_kecil();
                delay_ms(437);
                // yang kena berarti cuman yang kiri
            }
            ratapintu();
            diam();
            delay_ms(500);
            inv_cek_komp();
            if(ruanghome == 1){
                jalanlurus();
                delay_ms(500);
                while(1)
                {
                diam();
                }
            }else{
                mundur();
                delay_ms(300);
                sampingkiri();
                if(senssampingkiri>=25)
                {
                    putarkiri(); 
                    delay_ms(800);
                    countBelokan=0;
                    do
                    {
                        kanan();
                        jalanlurus();
                        countBelokan++;
                    }while(senskanan>=16 && countBelokan <= 60); 
                    goto exit;
                }
                else
                {
                countBelokan=0;
                    do
                    {     
                        countBelokan++;
                        kanan();
                        sampingkanan();
                        putarkanan();
                    } 
                    while((senskanan >= 20 || senssampingkanan>=16) && countBelokan<=250);
                }
            }
        exit:
        }
    }
    else
    {
    if((bandeka && banteka) || (bandeki && banteki))   
       {
            port_biper=0x01;
            cek_juring();
            port_biper=0x00;
       }
    else if ((bandeka && banteka && bandeki) || (bandeki && banteki && bandeka) || (banteka && banteki && banbel))
        {
            cek_juring();
            cek_home();    
        }
    else if (
        ( (banteka && banteki) && !bandeki && !bandeka && !banbel ) ||
        ( (banteki && !banteka) && !bandeki && !bandeka && !banbel )||
        ( (!banteki && banteka) && !bandeki && !bandeka && !banbel )
        )
        {
            if(aktifcekgaris == 1){
                cek_garis();
                jalanlurus();
                biper(200);
            }
        }
    }
}
void matiin_api()
{
    diam();
    delay_ms(200);
    sini:
    cek_api(5);
    if (api_ruang == 1) 
    {
        countBelokan=0;
        kipas=1;
        do{
            putarkanan_kecil();
            countBelokan++;
            delay_ms(50);
        }while(countBelokan<=30);
        kipas=0;
        diam();
        delay_ms(200);
    }
    cek_api(5);
    if (api_ruang == 1)
    {
        countBelokan=0;
        kipas=1;
        do{
            putarkiri_kecil();
            countBelokan++;
            delay_ms(50);
        }while(countBelokan<=60);
        kipas=0;
        diam();
        delay_ms(300);
    }
    cek_api(3);
    if(api_ruang==0)
    {
        cek_api(10);
        if(api_ruang == 1){
            goto sini;
        }
        else
        {      
            aktifcekgaris = 0;
            do{ 
                get_adc();
                keluar_juring();
            }while(
            (adc_belakang<=cal_adc_belakang) ||
             (adc_tengah_kanan <= cal_adc_tengah_kanan) ||
             (adc_tengah_kiri <= cal_adc_tengah_kiri) || 
             (adc_depan_kanan <= cal_adc_depan_kanan) ||
             (adc_depan_kiri <= cal_adc_depan_kiri)
             );
            aktifcekgaris = 1;
            api = 0 ;
            goto exit;
        } 
    }
    else{
        goto sini;
    }
    exit:
}     

//=======IR (Baru)======
unsigned jarak1;
unsigned char ir6()
{
    jarak1 = (unsigned char)((1/((0.00017919921875*(float)read_adc(6))-0.001)-0.42));
    return jarak1;
}

//=========Cek_Boneka=======
unsigned int batas_ir_boneka=22,batas_sensdepan_boneka=60,batas_max_sensdepan_boneka=80;
unsigned int counterBoneka=0,tempir1=1000,tempsensdepan=0,tempboneka,batas_srf_boneka=30;
unsigned char anjing=0;
void cek_boneka()
{
    if(aktifcekanjing==1){
    sini:
    tempir1=1000,tempsensdepan=0,tempboneka=0;
    do{
        counterBoneka++;
        depan();
        if(tempsensdepan<=sensdepan){
            tempsensdepan=sensdepan;
        }
        boneka();
        if(tempboneka<=sensboneka){
             tempboneka=sensboneka;
        }
        if(tempir1>=ir6()){
            tempir1 = ir6();
        }
    }while(counterBoneka<=3);
    if (
    ((tempir1 <= batas_ir_boneka) || (tempboneka<=batas_srf_boneka)) && (tempsensdepan>=batas_sensdepan_boneka) && (tempsensdepan<=batas_max_sensdepan_boneka)
    )
    {
        if(anjing>=4){
            PORTG=0x01;
            mundur();
            delay_ms(700);
            countBelokan=0;
            do 
            {     
                kanan();
                sampingkanan();
                putarkiri();
                countBelokan++;
            } 
            while(countBelokan<88);
            PORTG=0x00;
            anjing = 0;
            goto exit;
        }
        anjing++;
        diam();
        delay_ms(150);
        goto sini;
        }
        else
        {
            anjing = 0;
        }
    }
    exit:
}

// ==> Baru 06-04-2014 (03.21 AM)
//======================Navigasi Ruang====================================
unsigned char 
dindingSampingKiri,dindingSampingKanan,dindingKanan,dindingKiri,dindingBelakang,dindingDepan;
void ruang()
{   
    kanan();
    kiri();
    sampingkanan();
    sampingkiri();
    depan();
    dindingKanan        = senskanan <= 25,
    dindingKiri         = senskiri <= 25,
    dindingDepan        = sensdepan <= 40;
    if ( !dindingKanan && dindingDepan && !dindingKiri )
    {
        ruang1=1;ruang2=0;ruang3=0;ruang4=1;
    }
    else if ( dindingKanan && dindingDepan && !dindingKiri )
    {
        ruang1=0;ruang2=1;ruang3=1;ruang4=0;
    }
    else if ( dindingKanan && !dindingDepan && !dindingKiri )
    {
        ruang1=1;ruang2=1;ruang3=0;ruang4=0;
    }
    else if( !dindingKanan && !dindingDepan && dindingKiri ){
        ruang1=1;ruang2=0;ruang3=0;ruang4=0;
    }
}
void ruang_belakang()
{
    sampingkiri();
    sampingkanan();
    belakang();
    dindingSampingKiri  = senssampingkiri <= 25,
    dindingSampingKanan = senssampingkanan <= 25,
    dindingBelakang     = sensbelakang <= 40;
    if( dindingSampingKiri && !dindingSampingKanan && dindingBelakang)
    {
        ruang1=0;ruang2=1;ruang3=1;ruang4=0;
    }
    else if( dindingSampingKiri && !dindingSampingKanan && !dindingBelakang)
    {
        ruang1=0;ruang2=1;ruang3=0;ruang4=0;
    }
    else if( !dindingSampingKiri && dindingSampingKanan && !dindingBelakang)
    {
       ruang1=1;ruang2=0;ruang3=0;ruang4=0;
    }
    else if( !dindingSampingKiri && !dindingSampingKanan && dindingBelakang)
    {
       ruang1=0;ruang2=0;ruang3=0;ruang4=1;
    }
}

//======================STATUS===========
void status(){
    printf("Global api: %d, ruangapi: %d, api: %d \r\n",api_global,ruangapi,api);
    printf("Start Lorong: %d \r\n \n",startlorong);
}

//========================UTAMA===============

//-------------------Variabel-----------
unsigned char tanda,count;
void looping(){
    while(1)
    {
        tanda=count%2;
        switch(tanda)
        {
            case 0:
            depan();
                if(sensdepan<=14 )
                {  
                    if (switch_PID==1)
                    {
                        countBelokan = 0;
                        do
                        {
                            depan();
                            putarkiri();
                            countBelokan++;
                            if(countBelokan>=150){
                                countnyangkut=0;
                                do{
                                    PORTG = 0x01;
                                    jalanlurus();
                                    cek_boneka();
                                    depan();
                                    countBelokan++;
                                    countnyangkut++;
                                    if(countnyangkut>=200){
                                        mundur();
                                        delay_ms(400);
                                        putarkanan();
                                        delay_ms(250);                            
                                    }   
                                    detek_garis();
                                }while(sensdepan>=10 && countBelokan<=200);
                                goto exit;
                                PORTG = 0x00;                                
                            }
                            detek_garis();
                            cek_boneka();
                        }while(sensdepan<18);                
                        if(countBelokan > 15){
                            counterbelokkiri ++;
                            biper(100);
                            printf("countBelok %d /r/n",countBelokan);
                        }
                    }
                    else if (switch_PID==0)
                    {
                        countBelokan = 0;
                        do
                        {
                            depan();
                            putarkanan();
                            countBelokan++;
                            if(countBelokan>=100){
                                countnyangkut=0;
                                do{
                                    PORTG = 0x01;
                                    jalanlurus();
                                    cek_boneka();
                                    depan();
                                    countBelokan++;
                                     countnyangkut++;
                                    if(countnyangkut>=200){
                                    mundur();
                                    delay_ms(400);
                                    putarkanan();
                                    delay_ms(250);                            
                                    }   
                                    detek_garis();
                                    goto exit;
                                }while(sensdepan>=10  && countBelokan <= 150);
                                PORTG = 0x00;                                
                            }
                            detek_garis();
                            cek_boneka();
                        }while((sensdepan<18) || countBelokan <= 60);                
                        if(countBelokan > 15){
                            counterbelokkanan ++;
                            printf("countBelok %d /r/n",countBelokan);
                            biper(100);
                        }   
                    }
                }
                exit:
                break;
              case 1:
                cek_boneka();
                if (switch_PID==1)
                {
                    kanan();
                    PID_kanan();
                }
                else if (switch_PID==0)
                {
                    kiri();
                    PID_kiri();
                }
                detek_garis();
                //status();
                break;
            }
        count++;
        if(count>=255) count=0;
    }
}  
void start()
{
    countBelokan=0;
    while(1){
        sampingkanan();
        depan();                                       
        kanan();
        if(sensdepan<=12 || senssampingkanan >= 25 || senskanan >= 30)
        {
            countBelokan++;
            putarkanan();
            if(countBelokan>=400){
                goto keluarpaksa;
            }
        }
        else if (sensdepan>=16 && senssampingkanan < 25 && senskanan < 30)
        {
            do{
                keluarpaksa:
                get_adc();
                keluar_juring();
                aktifcekgaris=0; 
            }while(
                    (adc_belakang<=cal_adc_belakang) || 
                    (adc_tengah_kanan <= cal_adc_tengah_kanan) || 
                    (adc_tengah_kiri <= cal_adc_tengah_kiri) || 
                    (adc_depan_kanan <= cal_adc_depan_kanan) || 
                    (adc_depan_kiri <= cal_adc_depan_kiri)
            );   
            aktifcekgaris=1;
            looping();
        }
    }     
}

//========================PENGECEKAN===============
void kalibrasi()
{
if(kalibrasiputih==0)
        {   
            do
            {
            lcd_gotoxy(0,0);
            lcd_clear();
            printf("Start \r\n");
            lcd_puts("Start");
            }while(kalibrasiputih==1); 
            
            PORTG=0x01;
            delay_ms(2000);
            PORTG=0x00;
            printf("\r\n");
            printf("Nilai Awal Kalibrasi Proximity \r\n"); 
            delay_ms(1000);
            
            do
            {
            printf("depan_kanan : %d tengah_kanan : %d depan_kiri : %d tengah_kiri : %d belakang : %d \r\n",cal_adc_depan_kanan,cal_adc_tengah_kanan,cal_adc_depan_kiri,cal_adc_tengah_kiri,cal_adc_belakang);                
            delay_ms(300);
            }while(kalibrasiputih==1);
            
            PORTG=0x01;
            delay_ms(2000);
            PORTG=0x00;
            printf("\r\n");
            printf("UVtron \r\n");
            delay_ms(1000);
            
            do
            {
            tes_uvtron();
            }while(kalibrasiputih==1);
            
            PORTG=0x01;
            delay_ms(500);
            PORTG=0x00;
            delay_ms(200);
            PORTG=0x01;
            delay_ms(500);
            PORTG=0x00;
            
            printf("\r\n");
            printf("Ultrasonik , Infrared \r\n");
            delay_ms(1000);
            
            do
            {
            cek_ultrasonik();
            sensorboneka();  
            delay_ms(300);
            }while(kalibrasiputih==1);
            
            
            PORTG=0x01;
            delay_ms(500);
            PORTG=0x00;
            delay_ms(200);
            PORTG=0x01;
            delay_ms(500);
            PORTG=0x00;
            delay_ms(200);
            PORTG=0x01;
            delay_ms(500);
            PORTG=0x00;
                       
            printf("\r\n");
            printf("Boneka \r\n");
            delay_ms(1000);
            
            do
            {
            tes_boneka();
            }while(kalibrasiputih==1);
            
            PORTG=0x01;
            delay_ms(500);
            PORTG=0x00;
            delay_ms(200);
            PORTG=0x01;
            delay_ms(500);
            PORTG=0x00;
            printf("Kompas \r\n");
            delay_ms(1000);  
    
            do{
    
            get_compass();
            printf("%d cal = %d \r\n",derajat_compass, calibrate_cmps);
            delay_ms(300);
    
            }while(kalibrasiputih==1);
            printf("Posisi Robot Ruang 4 \r\n");
            delay_ms(1000);
    
            do{
    
            printf("Start \r\n");
    
            }while(kalibrasiputih==1);
            set=255;
            for(i=0;i<5;i++)
            {  
            derajat_compass=read_compass(1); 
            delay_us(10);
            if(set>=derajat_compass) set=derajat_compass;
            
            delay_ms(200);
            } 
            delay_ms(1000);
            
            set=(256-set);
            PORTG=0x01;
            delay_ms(500);
            PORTG=0x00;
            delay_ms(200);
            PORTG=0x01;
            delay_ms(500);
            PORTG=0x00;
            do{
        
            printf("Tresh Kompas %d \r\n",set);
            delay_ms(300);
            
            }while(kalibrasiputih==1);
            
            w = set;
            printf("w = %d \r\n",w);
            delay_ms(1000);

            
            PORTG=0x01;
            delay_ms(2000);
            PORTG=0x00;
            printf("\r\n");
            printf("Proximity \r\n");
            delay_ms(1000);
            
            do
            {
                get_adc();
                printf("nilai Proxy %d %d %d %d %d \r\n",adc_depan_kanan,adc_tengah_kanan,adc_depan_kiri,adc_tengah_kiri,adc_belakang);
                lcd_gotoxy(0,0);
                lcd_clear();
                sprintf(kata,"Proxy %d %d %d %d %d",adc_depan_kanan,adc_tengah_kanan,adc_depan_kiri,adc_tengah_kiri,adc_belakang);
                lcd_puts(kata);
                delay_ms(300);
            }while(kalibrasiputih==1);
            
            PORTG=0x01;
            delay_ms(500);
            PORTG=0x00;
            delay_ms(200);
            PORTG=0x01;
            delay_ms(500);
            PORTG=0x00;
            
            printf("\r\n");
            lcd_gotoxy(0,0);
            lcd_clear();
            printf("Juring Putih \r\n");
            lcd_puts("Juring putih");
            delay_ms(1000);
        
            do
            {   lcd_gotoxy(0,0);
                lcd_clear();
                printf("Start \r\n");
                lcd_puts("Start");
            }while(kalibrasiputih==1);
    
            minn[0]=1023;
            minn[1]=1023;
            minn[2]=1023;
            minn[3]=1023;
            minn[4]=1023;
            
            for(i=0;i<5;i++)
            {
                adc_depan_kanan=read_adc(0);
                delay_us(10); 
                adc_tengah_kanan=read_adc(1);
                delay_us(10);
                adc_depan_kiri=read_adc(2);
                delay_us(10); 
                adc_tengah_kiri=read_adc(3);
                delay_us(10);
                adc_belakang=read_adc(4);
                delay_us(10);
        
                if(minn[0]>=adc_depan_kanan) minn[0]=adc_depan_kanan;
                if(minn[1]>=adc_tengah_kanan) minn[1]=adc_tengah_kanan;
                if(minn[2]>=adc_depan_kiri) minn[2]=adc_depan_kiri;
                if(minn[3]>=adc_tengah_kiri) minn[3]=adc_tengah_kiri;
                if(minn[4]>=adc_belakang) minn[4]=adc_belakang;
        
                delay_ms(200);
            }              
            
            PORTG=0x01;
            delay_ms(500);
            PORTG=0x00;
            delay_ms(200);
            PORTG=0x01;
            delay_ms(500);
            PORTG=0x00;
            PORTG=0x01;
            delay_ms(500);
            PORTG=0x00;
            
            printf("\r\n");
            lcd_gotoxy(0,0);
            lcd_clear();
            printf("Karpet Terang \r\n");
            lcd_puts("Karpet Terang");
            delay_ms(1000);
            
            do
            {
                lcd_gotoxy(0,0);
                lcd_clear();
                printf("Start \r\n");
                lcd_puts("Start");
            }while(kalibrasiputih==1);             
            minn1[0]=1024;
            minn1[1]=1024;
            minn1[2]=1024;
            minn1[3]=1024;
            minn1[4]=1024;
            for(i=0;i<5;i++)
            {
                adc_depan_kanan=read_adc(0);
                delay_us(10); 
                adc_tengah_kanan=read_adc(1);
                delay_us(10);
                adc_depan_kiri=read_adc(2);
                delay_us(10); 
                adc_tengah_kiri=read_adc(3);
                delay_us(10);
                adc_belakang=read_adc(4);
                delay_us(10);
                if(minn1[0]>=adc_depan_kanan) minn1[0]=adc_depan_kanan;
                if(minn1[1]>=adc_tengah_kanan) minn1[1]=adc_tengah_kanan;
                if(minn1[2]>=adc_depan_kiri) minn1[2]=adc_depan_kiri;
                if(minn1[3]>=adc_tengah_kiri) minn1[3]=adc_tengah_kiri;
                if(minn1[4]>=adc_belakang) minn1[4]=adc_belakang;
                delay_ms(200);
            }
            delay_ms(1000);
            minn[0]=(minn[0]+minn1[0])/2; 
            minn[1]=(minn[1]+minn1[1])/2;
            minn[2]=(minn[2]+minn1[2])/2; 
            minn[3]=(minn[3]+minn1[3])/2;
            minn[4]=(minn[4]+minn1[4])/2;
            do
            {   PORTG=0x01;
                delay_ms(500);
                PORTG=0x00;
                lcd_gotoxy(0,0);
                lcd_clear();           
                printf("Tresh %d %d %d %d %d\r\n",minn[0],minn[1],minn[2],minn[3],minn[4]);
                sprintf(kata,"Tresh %d %d %d %d %d",minn[0],minn[1],minn[2],minn[3],minn[4]);
                lcd_puts(kata);
                delay_ms(300);
                
            }while(kalibrasiputih==1);
            biper(500);
            delay_ms(200);
            biper(500);
            printf("\r\n");
            cal_adc_depan_kanan=minn[0];
            cal_adc_tengah_kanan=minn[1];
            cal_adc_depan_kiri=minn[2];
            cal_adc_tengah_kiri=minn[3];
            cal_adc_belakang=minn[4];
            lcd_gotoxy(0,0);
            lcd_clear();
            printf("depan_kanan : %d tengah_kanan : %d depan_kiri : %d tengah_kiri : %d belakang : %d \r\n",cal_adc_depan_kanan,cal_adc_tengah_kanan,cal_adc_depan_kiri,cal_adc_tengah_kiri,cal_adc_belakang);
            sprintf(kata,"%d %d %d %d %d",cal_adc_depan_kanan,cal_adc_tengah_kanan,cal_adc_depan_kiri,cal_adc_tengah_kiri,cal_adc_belakang);
            lcd_puts(kata);
            delay_ms(1000);
        }
}
void cek_ultrasonik()
{
    kanan();
    kiri();
    sampingkanan();
    sampingkiri();
    depan();
    belakang();
    printf("sampingkiri %d kiri %d depan %d kanan %d sampingkanan %d belakang %d \r\n", senssampingkiri,senskiri,sensdepan,senskanan,senssampingkanan,sensbelakang);
 
}
void sensorboneka()
{
    boneka();
    printf("ultraboneka : %d , irboneka :%d \r\n",sensboneka,ir6());
}
void cek_proxi()
{
    printf("depki:%d depka:%d teki:%d teka:%d bel:%d \r\n",read_adc(2),read_adc(0),read_adc(3),read_adc(1),read_adc(4));
}
void tes_uvtron()
{
    DDRD.7=1;
    kipas=0;
    if(uvtron==0){
        kipas=1;
    }
}
void tes_boneka()
{   depan();
    printf("depan : %d ",sensdepan);
    sensorboneka();
    sini:
    tempir1=1000,tempsensdepan=0,tempboneka=0;

        if(tempsensdepan<=sensdepan){
            tempsensdepan=sensdepan;
        }
        if(tempboneka<=sensboneka){
             tempboneka=sensboneka;
        }
        if(tempir1>=ir6()){
            tempir1 = ir6();
        }
    if (
    ((tempir1 <= batas_ir_boneka) || (tempboneka<=batas_srf_boneka))  && (tempsensdepan>=batas_sensdepan_boneka) && (tempsensdepan<=batas_max_sensdepan_boneka)
    )
    {
        if(anjing>=1){
            PORTG=0x01;
            printf("antisipasi boneka \r\n");
            PORTG=0x00;
            anjing = 0;
            goto exit;
        }
        anjing++;
        delay_ms(50);
        goto sini;
        }
        else
        {
            anjing = 0;
        }
    exit:
}
void cek_kompas()
{
    get_compass();
    printf("%d calkom = %d derkom \r\n",calibrate_cmps,derajat_compass);
    delay_ms(300);
}

/*Variabel sound*/
unsigned countSound;
void main(void)
{
// Declare your local variables here
//Inisialisasi Port
PORTA=0x80;DDRA=0x00;
PORTB=0x00;DDRB=0x00;
PORTC=0x00;DDRC=0xFF;
PORTD=0x06;DDRD=0x80;
PORTE=0x00;DDRE=0x00;
PORTF=0x00;DDRF=0x00;
PORTG=0x00;DDRG=0x00;

// Timer/Counter 0 initialization
// Clock source: System Clock
// Clock value: Timer 0 Stopped
// Mode: Normal top=0xFF
// OC0 output: Disconnected
ASSR=0x00;
TCCR0=0x00;
TCNT0=0x00;
OCR0=0x00;

// Timer/Counter 1 initialization
// Clock source: System Clock
// Clock value: Timer1 Stopped
// Mode: Normal top=0xFFFF
// OC1A output: Discon.
// OC1B output: Discon.
// OC1C output: Discon.
// Noise Canceler: Off
// Input Capture on Falling Edge
// Timer1 Overflow Interrupt: Off
// Input Capture Interrupt: Off
// Compare A Match Interrupt: Off
// Compare B Match Interrupt: Off
// Compare C Match Interrupt: Off
TCCR1A=0x00;
TCCR1B=0x00;
TCNT1H=0x00;
TCNT1L=0x00;
ICR1H=0x00;
ICR1L=0x00;
OCR1AH=0x00;
OCR1AL=0x00;
OCR1BH=0x00;
OCR1BL=0x00;
OCR1CH=0x00;
OCR1CL=0x00;

// Timer/Counter 2 initialization
// Clock source: System Clock
// Clock value: Timer2 Stopped
// Mode: Normal top=0xFF
// OC2 output: Disconnected
TCCR2=0x00;
TCNT2=0x00;
OCR2=0x00;

// Timer/Counter 3 initialization
// Clock source: System Clock
// Clock value: Timer3 Stopped
// Mode: Normal top=0xFFFF
// OC3A output: Discon.
// OC3B output: Discon.
// OC3C output: Discon.
// Noise Canceler: Off
// Input Capture on Falling Edge
// Timer3 Overflow Interrupt: Off
// Input Capture Interrupt: Off
// Compare A Match Interrupt: Off
// Compare B Match Interrupt: Off
// Compare C Match Interrupt: Off
TCCR3A=0x00;
TCCR3B=0x00;
TCNT3H=0x00;
TCNT3L=0x00;
ICR3H=0x00;
ICR3L=0x00;
OCR3AH=0x00;
OCR3AL=0x00;
OCR3BH=0x00;
OCR3BL=0x00;
OCR3CH=0x00;
OCR3CL=0x00;

// External Interrupt(s) initialization
// INT0: Off
// INT1: Off
// INT2: Off
// INT3: Off
// INT4: Off
// INT5: Off
// INT6: Off
// INT7: Off
EICRA=0x00;
EICRB=0x00;
EIMSK=0x00;

// Timer(s)/Counter(s) Interrupt(s) initialization
TIMSK=0x00;

ETIMSK=0x00;

// USART0 initialization
// Communication Parameters: 8 Data, 1 Stop, No Parity
// USART0 Receiver: Off
// USART0 Transmitter: On
// USART0 Mode: Asynchronous
// USART0 Baud Rate: 9600
UCSR0A=0x00;
UCSR0B=0x08;
UCSR0C=0x06;
UBRR0H=0x00;
UBRR0L=0x67;

// USART1 initialization
// USART1 disabled
UCSR1B=0x00;

// Analog Comparator initialization
// Analog Comparator: Off
// Analog Comparator Input Capture by Timer/Counter 1: Off
ACSR=0x80;
SFIOR=0x00;

// ADC initialization
// ADC Clock frequency: 1000.000 kHz
// ADC Voltage Reference: AVCC pin
ADMUX=ADC_VREF_TYPE & 0xff;
ADCSRA=0x84;

// SPI initialization
// SPI disabled
SPCR=0x00;

// TWI initialization
// Mode: TWI Master
// Bit Rate: 100 kHz

// Alphanumeric LCD initialization
// Connections are specified in the
// Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
// RS - PORTA Bit 0
// RD - PORTA Bit 1
// EN - PORTA Bit 2
// D4 - PORTA Bit 3
// D5 - PORTA Bit 4
// D6 - PORTA Bit 5
// D7 - PORTA Bit 6
// Characters/line: 16
lcd_init(16);
i2c_init();
// Global enable interrupts
#asm("sei")
DDRD.7 = 1;
kipas = 0;
lcd_init(16);  
countSound = 0 ;
diam();
DDRG=0x01;
biper(1000);
while (1)
      { 
        if (sound==0)
        {
            countSound++;
            if(countSound>=16)
                {      
                    
                    start();
                    //printf("depki:%d depka:%d teki:%d teka:%d bel:%d \r\n",read_adc(2),read_adc(0),read_adc(3),read_adc(1),read_adc(4));

                }   
        }
        if(sound == 1){
            countSound = 0;
        }
        /* VOID COBA COBA */
        // cek_kompas();
         //kalibrasi();
        // sensorboneka();
         tes_boneka();
        // cek_proxi();  
        // cek_ultrasonik();
        // keluar_juring();
        // printf("adc6 : %d \r\n",ir6());  
        // ratapintu(); 
        // keluar_juring();
        // test_get_proxi_adc(5); 
        // start();
        // test_sensor_anjing();
        // hitung soung sampai 6 kali baru meratakan posisi robot terhadap dinding terdekat dan memulai looping
        // printf("standby");
        // kalibrasi_proxi_adc();
        // cek_ultrasonik();
        // tes_uvtron();
        // cek_proxi();
        // cek_ultrasonik();
        // tes_boneka();
        // belakang();
      }
}
